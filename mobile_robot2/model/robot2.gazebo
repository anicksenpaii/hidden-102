<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <gazebo reference="body_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="wheel1_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Yellow</material>
  </gazebo>
  

  <gazebo reference="wheel2_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Yellow</material>
  </gazebo>

  <gazebo reference="wheel3_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Yellow</material>
  </gazebo>

  <gazebo reference="wheel4_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Yellow</material>
  </gazebo>

<gazebo>
<plugin name='skid_steer_drive' filename='libgazebo_ros_diff_drive.so'>
      <ros>
        <namespace> </namespace>
      </ros>
      <!-- Number of wheel pairs -->
      <num_wheel_pairs>2</num_wheel_pairs>

      <!-- wheels -->
      <left_joint>wheel4_joint</left_joint>
      <right_joint>wheel3_joint</right_joint>

      <left_joint>wheel2_joint</left_joint>
      <right_joint>wheel1_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>${body_link_y_dim+wheel_link_length}</wheel_separation>
      <wheel_separation>${body_link_y_dim+wheel_link_length}</wheel_separation>
      <wheel_diameter>${wheel_link_radius}</wheel_diameter>
      <wheel_diameter>${wheel_link_radius}</wheel_diameter>

      <!-- limits -->
      <max_wheel_torque>1000</max_wheel_torque>
      <max_wheel_acceleration>5.0</max_wheel_acceleration>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>

      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>

    </plugin>
</gazebo>
    <gazebo reference="velodyne">
        <material>Gazebo/Black</material>
        <sensor type="ray" name="velodyne_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>false</visualize>
            <update_rate>10</update_rate>
            <always_on>true</always_on>
            <ray>
                <scan>
                    <horizontal>
                        <samples>180</samples>
                        <resolution>1</resolution>
                        <min_angle>-3.14159</min_angle>
                        <max_angle>3.14159</max_angle>
                    </horizontal>
                    <vertical>
                        <samples>16</samples>
                        <resolution>1</resolution>
                        <min_angle>-0.261799</min_angle>
                        <max_angle>0.261799</max_angle>
                    </vertical>
                </scan>
                <range>
                    <min>0.1</min>
                    <max>10.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="velodyne_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <namespace>/velodyne</namespace>
                    <remapping>~/out:=PointCloud2</remapping>
                </ros>
                <output_type>sensor_msgs/PointCloud2</output_type>
                <frame_name>velodyne</frame_name>
            </plugin>
        </sensor>
    </gazebo>

</robot>
